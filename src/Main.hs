module Main where

import           System.Environment   (getArgs)

import           EmbeddedLootLanguage
import           LootScriptLanguage

type OutputName = FilePath

main :: IO ()
main = do
    args <- getArgs
    runMain args

runMain :: [String] -> IO ()
runMain args =
    if null args
    then abortWithError "no source file specified"
    else do
      ppResult <- readFile sourcePath >>= preProcessor
      eitherDoOrError (writeFilter outputName) $ ppResult >>= translateProgram sourcePath
    where sourcePath = arg 0
          outputName | (length args < 3) || not outFlag = "out"
                     | otherwise = arg 2
          outFlag = arg 1 == "-o"
          arg = (args !!)
          eitherDoOrError = either abortWithError

writeFilter :: OutputName -> Filter -> IO ()
writeFilter path x = writeFile file $ credits ++ show x
    where file = path ++ ".filter"

credits = "# filter generated by flc" ++ newline
       ++ "# manual editing is not recommended" ++ newline

abortWithError :: String -> IO ()
abortWithError s = putStrLn $ "Error: " ++ s

newline = "\n"
